name: build-and-deploy-dev

on:
  workflow_run:
    workflows: ["test"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set variables
        id: variables
        run: echo "git_tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Build bin (api)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.api
          build-args: GIT_TAG=${{ steps.variables.outputs.git_tag }}
          push: false
          tags: opxs-build-api-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api-builder,mode=max
          load: true
      - name: Copy bin (api)
        run: |
          mkdir -p ./bin
          docker run --name opxs-api-builder -d opxs-build-api-image
          docker cp opxs-api-builder:/app/opxs-api ./bin
          docker stop opxs-api-builder
          docker rm opxs-api-builder

      - name: Build bin (batch-email-send)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.batch-email-send
          build-args: GIT_TAG=${{ steps.variables.outputs.git_tag }}
          push: false
          tags: opxs-build-batch-email-send-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-builder,mode=max
          load: true
      - name: Copy bin (batch-email-send)
        run: |
          mkdir -p ./bin
          docker run --name opxs-batch-email-send-builder -d opxs-build-batch-email-send-image
          docker cp opxs-batch-email-send-builder:/app/opxs-batch-email-send ./bin
          docker stop opxs-batch-email-send-builder
          docker rm opxs-batch-email-send-builder

      - name: Build bin (batch-email-send-feedback)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.batch-email-send-feedback
          build-args: GIT_TAG=${{ steps.variables.outputs.git_tag }}
          push: false
          tags: opxs-build-batch-email-send-feedback-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-feedback-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-feedback-builder,mode=max
          load: true
      - name: Copy bin (batch-email-send-feedback)
        run: |
          mkdir -p ./bin
          docker run --name opxs-batch-email-send-feedback-builder -d opxs-build-batch-email-send-feedback-image
          docker cp opxs-batch-email-send-feedback-builder:/app/opxs-batch-email-send-feedback ./bin
          docker stop opxs-batch-email-send-feedback-builder
          docker rm opxs-batch-email-send-feedback-builder

      - name: Build bin (batch-image-convert)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.build.batch-image-convert
          build-args: GIT_TAG=${{ steps.variables.outputs.git_tag }}
          push: false
          tags: opxs-build-batch-image-convert-image
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-image-convert-builder
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-image-convert-builder,mode=max
          load: true
      - name: Copy bin (batch-image-convert)
        run: |
          mkdir -p ./bin
          docker run --name opxs-batch-image-convert-builder -d opxs-build-batch-image-convert-image
          docker cp opxs-batch-image-convert-builder:/app/opxs-batch-image-convert ./bin
          docker stop opxs-batch-image-convert-builder
          docker rm opxs-batch-image-convert-builder

      - name: Login to Amazon ECR
        id: aws-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push image to Amazon ECR (opxs-api-ecs-service)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.run.api
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-api-ecs-ecr:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-api,mode=max
      - name: Update ECS
        run: |
          aws ecs update-service --cluster opxs-api-ecs-cluster --service opxs-api-ecs-service --force-new-deployment

      - name: Build and Push image to Amazon ECR (opxs-batch-email-send-lambda)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.run.batch-email-send
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-email-send-lambda-ecr:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send,mode=max
      - name: Update Lambda
        run: |
          aws lambda update-function-code --function-name opxs-batch-email-send-lambda --image-uri ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-email-send-lambda-ecr:latest

      - name: Build and Push image to Amazon ECR (opxs-batch-email-send-feedback-lambda)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.run.batch-email-send-feedback
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-email-send-feedback-lambda-ecr:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-feedback
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-email-send-feedback,mode=max
      - name: Update Lambda
        run: |
          aws lambda update-function-code --function-name opxs-batch-email-send-feedback-lambda --image-uri ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-email-send-feedback-lambda-ecr:latest

      - name: Build and Push image to Amazon ECR (opxs-batch-image-convert-lambda)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.run.batch-image-convert
          push: true
          tags: ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-image-convert-lambda-ecr:latest
          provenance: false
          cache-from: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-image-convert
          cache-to: type=s3,region=us-east-1,bucket=opxs.v1.dev.docker-build-cache,name=opxs-batch-image-convert,mode=max
      - name: Update Lambda
        run: |
          aws lambda update-function-code --function-name opxs-batch-image-convert-lambda --image-uri ${{ steps.aws-ecr.outputs.registry }}/opxs-batch-image-convert-lambda-ecr:latest
